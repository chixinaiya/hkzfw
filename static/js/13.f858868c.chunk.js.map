{"version":3,"sources":["pages/Login/index.module.css","pages/Login/index.js"],"names":["module","exports","Login","login","e","a","preventDefault","this","props","values","errors","touched","handleChange","handleSubmit","handleBlur","className","styles","root","mode","size","onSubmit","formItem","input","name","value","username","onChange","placeholder","error","type","password","formSubmit","submit","backHome","Item","to","Component","NewLogin","withFormik","mapPropsToValues","validationSchema","yup","shape","required","matches","history","location","status","data","description","console","log","success","setLocal","ZFW_TOKEN","token","backUrl","push","fail","displayName"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,KAAO,oBAAoB,UAAY,yBAAyB,SAAW,wBAAwB,SAAW,wBAAwB,MAAQ,qBAAqB,WAAa,0BAA0B,OAAS,sBAAsB,MAAQ,uB,kTCc7PC,E,4MAkBJC,M,uCAAQ,WAAOC,GAAP,SAAAC,EAAA,sDAEND,EAAEE,iBAFI,2C,6GAKE,IAAD,EAQHC,KAAKC,MANPC,EAFK,EAELA,OAEAC,GAJK,EAGLC,QAHK,EAILD,QACAE,EALK,EAKLA,aAEAC,GAPK,EAMLC,WANK,EAOLD,cAEF,OACE,yBAAKE,UAAWC,IAAOC,MAErB,uBAAQC,KAAK,SAAb,4BACA,uBAAYC,KAAK,OAGjB,2BACE,0BAAMC,SAAUP,GACd,yBAAKE,UAAWC,IAAOK,UACrB,2BACEN,UAAWC,IAAOM,MAClBC,KAAK,WACLC,MAAOf,EAAOgB,SACdC,SAAUd,EACVe,YAAY,oCAIfjB,EAAOe,UACN,yBAAKV,UAAWC,IAAOY,OAAQlB,EAAOe,UAExC,yBAAKV,UAAWC,IAAOK,UACrB,2BACEN,UAAWC,IAAOM,MAClBC,KAAK,WACLM,KAAK,WACLL,MAAOf,EAAOqB,SACdJ,SAAUd,EACVe,YAAY,oCAIfjB,EAAOoB,UACN,yBAAKf,UAAWC,IAAOY,OAAQlB,EAAOoB,UAExC,yBAAKf,UAAWC,IAAOe,YACrB,4BAAQhB,UAAWC,IAAOgB,OAAQH,KAAK,UAAvC,mBAKJ,uBAAMd,UAAWC,IAAOiB,UACtB,sBAAMC,KAAN,KACE,kBAAC,IAAD,CAAMC,GAAG,YAAT,mE,GA5EMC,aAqFdC,EAAWC,YAAW,CAE1BC,iBAAkB,iBAAO,CAAEd,SAAU,GAAIK,SAAU,KAcnDU,iBAAkBC,MAAaC,MAAM,CACnCjB,SAAUgB,MAEPE,SAAS,wCACTC,QA5GW,qBA4GQ,wHACtBd,SAAUW,MAEPE,SAAS,kCACTC,QA/GS,sBA+GQ,2HAGtB/B,aAAa,WAAD,4BAAE,WAAOJ,EAAP,oCAAAJ,EAAA,iEAAiBG,MAASqC,EAA1B,EAA0BA,QAASC,EAAnC,EAAmCA,SAEvCrB,EAAuBhB,EAAvBgB,SAAUK,EAAarB,EAAbqB,SAFN,SAIgC3B,YAAM,CAAEsB,WAAUK,aAJlD,gBAIJiB,EAJI,EAIJA,OAAQC,EAJJ,EAIIA,KAAMC,EAJV,EAIUA,YACtBC,QAAQC,IAAIJ,EAAQC,EAAMC,GAEX,MAAXF,GACF,IAAMK,QAAQH,EAAa,GAE3BI,YAASC,IAAWN,EAAKO,QAIzB,UAAIT,EAASE,YAAb,aAAI,EAAeQ,SAEjBX,EAAQY,KAAKX,EAASE,KAAKQ,SAE3BX,EAAQY,KAAK,kBAGf,IAAMC,KAAKT,EAAa,GArBd,4CAAF,qDAAC,GAyBbU,YAAa,aApDErB,CAqDdpC,GACYmC","file":"static/js/13.f858868c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Login_root__3MEcn\",\"navHeader\":\"Login_navHeader__3OGZ2\",\"backHome\":\"Login_backHome__2fORx\",\"formItem\":\"Login_formItem__I1qIQ\",\"input\":\"Login_input__3ceLn\",\"formSubmit\":\"Login_formSubmit__62ebu\",\"submit\":\"Login_submit__1inYY\",\"error\":\"Login_error__3aHuk\"};","import React, { Component } from \"react\";\r\nimport { Flex, WingBlank, WhiteSpace, NavBar, Toast } from \"antd-mobile\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport styles from \"./index.module.css\";\r\nimport { login } from \"../../utils/api/user\";\r\nimport { setLocal, ZFW_TOKEN } from \"../../utils\";\r\nimport { withFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n// 验证规则：\r\nconst REG_UNAME = /^[a-zA-Z_\\d]{5,8}$/;\r\nconst REG_PWD = /^[a-zA-Z_\\d]{5,12}$/;\r\n\r\nclass Login extends Component {\r\n  // 设置状态数据\r\n  // state = {\r\n  //   username: \"\",\r\n  //   password: \"\",\r\n  // };\r\n\r\n  // 受控组件（双向数据绑定）\r\n  // handlerChange = (e) => {\r\n  //   // console.log(e.target);\r\n\r\n  //   // 更新状态数据\r\n  //   this.setState({\r\n  //     [e.target.name]: e.target.value,\r\n  //   });\r\n  // };\r\n\r\n  // 登录\r\n  login = async (e) => {\r\n    // 阻止默认事件\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      values,\r\n      touched,\r\n      errors,\r\n      handleChange,\r\n      handleBlur,\r\n      handleSubmit,\r\n    } = this.props;\r\n    return (\r\n      <div className={styles.root}>\r\n        {/* 顶部导航 */}\r\n        <NavBar mode=\"light\">账号登录</NavBar>\r\n        <WhiteSpace size=\"xl\" />\r\n\r\n        {/* 登录表单 */}\r\n        <WingBlank>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className={styles.formItem}>\r\n              <input\r\n                className={styles.input}\r\n                name=\"username\"\r\n                value={values.username}\r\n                onChange={handleChange}\r\n                placeholder=\"请输入账号\"\r\n              />\r\n            </div>\r\n            {/* 长度为5到8位，只能出现数字、字母、下划线 */}\r\n            {errors.username && (\r\n              <div className={styles.error}>{errors.username}</div>\r\n            )}\r\n            <div className={styles.formItem}>\r\n              <input\r\n                className={styles.input}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                placeholder=\"请输入密码\"\r\n              />\r\n            </div>\r\n            {/* 长度为5到12位，只能出现数字、字母、下划线 */}\r\n            {errors.password && (\r\n              <div className={styles.error}>{errors.password}</div>\r\n            )}\r\n            <div className={styles.formSubmit}>\r\n              <button className={styles.submit} type=\"submit\">\r\n                登 录\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <Flex className={styles.backHome}>\r\n            <Flex.Item>\r\n              <Link to=\"/registe\">还没有账号，去注册~</Link>\r\n            </Flex.Item>\r\n          </Flex>\r\n        </WingBlank>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst NewLogin = withFormik({\r\n  // 设置了状态数据\r\n  mapPropsToValues: () => ({ username: \"\", password: \"\" }),\r\n\r\n  // Custom sync validation\r\n  // validate: values => {\r\n  //   const errors = {};\r\n\r\n  //   if (!values.name) {\r\n  //     errors.name = 'Required';\r\n  //   }\r\n\r\n  //   return errors;\r\n  // },\r\n\r\n  // 校验：对象\r\n  validationSchema: yup.object().shape({\r\n    username: yup\r\n      .string()\r\n      .required(\"用户名必填！\")\r\n      .matches(REG_UNAME, \"长度为5到8位，只能出现数字、字母、下划线\"),\r\n    password: yup\r\n      .string()\r\n      .required(\"密码必填！\")\r\n      .matches(REG_PWD, \"长度为5到12位，只能出现数字、字母、下划线\"),\r\n  }),\r\n\r\n  handleSubmit: async (values, { props: { history, location } }) => {\r\n    // 获取用户名和密码\r\n    const { username, password } = values;\r\n    //  console.log(username, password);\r\n    const { status, data, description } = await login({ username, password });\r\n    console.log(status, data, description);\r\n\r\n    if (status === 200) {\r\n      Toast.success(description, 2);\r\n      // 存储token\r\n      setLocal(ZFW_TOKEN, data.token);\r\n      // 跳转页面\r\n      // 判断是否有回跳地址\r\n      // if(location.data && location.data.backUrl) {\r\n      if (location.data?.backUrl) {\r\n        // 相当于上边的写法\r\n        history.push(location.data.backUrl);\r\n      } else {\r\n        history.push(\"/home/profile\");\r\n      }\r\n    } else {\r\n      Toast.fail(description, 2);\r\n    }\r\n  },\r\n\r\n  displayName: \"BasicForm\",\r\n})(Login);\r\nexport default NewLogin;\r\n"],"sourceRoot":""}